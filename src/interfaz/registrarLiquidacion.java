/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import static java.util.Calendar.DAY_OF_YEAR;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JOptionPane;
import java.util.regex.Pattern;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author SISTEMAS
 */
public class registrarLiquidacion extends javax.swing.JFrame {

    PreparedStatement ps;
    ResultSet rs;
    
    /* AÃ‘O PARA EL CORRELATIVO Y PARA LA GESTION ---------------- */
    SimpleDateFormat formatoannio = new SimpleDateFormat("yy");  
    SimpleDateFormat formatogestion = new SimpleDateFormat("yyyy");
    Calendar calendario = Calendar.getInstance();
    String annio = formatoannio.format(calendario.getTime());
    String gestion = formatogestion.format(calendario.getTime());
    /* ---------------------------------------------------------- */
    
    String[] UNIDADES = {"", "un ", "dos ", "tres ", "cuatro ", "cinco ", "seis ", "siete ", "ocho ", "nueve "};
    String[] DECENAS = {"diez ", "once ", "doce ", "trece ", "catorce ", "quince ", "dieciseis ","diecisiete ", "dieciocho ", "diecinueve ", "veinte ", "treinta ", "cuarenta ","cincuenta ", "sesenta ", "setenta ", "ochenta ", "noventa "};
    String[] CENTENAS = {"", "ciento ", "doscientos ", "trecientos ", "cuatrocientos ", "quinientos ", "seiscientos ","setecientos ", "ochocientos ", "novecientos "};
    
    SimpleDateFormat sdf = new SimpleDateFormat("dd'/'MM'/'yyyy");
    
    String num_correlativo="";
    
    int sw=0,sw2=0;
    
    String fecha1;
    String suma_drives="";
    DecimalFormat formatea = new DecimalFormat("###,###.##",DecimalFormatSymbols.getInstance(Locale.CANADA));
    DecimalFormat formatea2 = new DecimalFormat("###.##",DecimalFormatSymbols.getInstance(Locale.CANADA));
    
    public registrarLiquidacion() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dcFecha = new com.toedter.calendar.JDateChooser();
        txtCorrelativo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPropietario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtChofer = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDescripcion1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDrive1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtFactura1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtFlete1 = new javax.swing.JTextField();
        txtDescripcion2 = new javax.swing.JTextField();
        txtDrive2 = new javax.swing.JTextField();
        txtFactura2 = new javax.swing.JTextField();
        txtFlete2 = new javax.swing.JTextField();
        txtDescripcion3 = new javax.swing.JTextField();
        txtDrive3 = new javax.swing.JTextField();
        txtFactura3 = new javax.swing.JTextField();
        txtFlete3 = new javax.swing.JTextField();
        txtDescripcion4 = new javax.swing.JTextField();
        txtDrive4 = new javax.swing.JTextField();
        txtFactura4 = new javax.swing.JTextField();
        txtFlete4 = new javax.swing.JTextField();
        txtTotalLiquidar = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtImporte1 = new javax.swing.JTextField();
        txtComprobante1 = new javax.swing.JTextField();
        txtDetalle1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtDetalle2 = new javax.swing.JTextField();
        txtComprobante2 = new javax.swing.JTextField();
        txtImporte2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtTotalAnticipos = new javax.swing.JTextField();
        txtRetencion = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtRastreo = new javax.swing.JTextField();
        txtSemirremolque = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtDeduccion1 = new javax.swing.JTextField();
        txtOtros1 = new javax.swing.JTextField();
        txtDeduccion2 = new javax.swing.JTextField();
        txtOtros2 = new javax.swing.JTextField();
        txtDeduccion3 = new javax.swing.JTextField();
        txtOtros3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTotalDeducciones = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtLiquidoPagable = new javax.swing.JTextField();
        txtLiteral = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnTotal = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtFecha1 = new javax.swing.JTextField();
        txtFecha2 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtPorcentaje = new javax.swing.JTextField();
        dcFechaConformidad = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtFechaPago = new javax.swing.JTextField();
        txtCodigoSemirremolque = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        ckSemirremolque = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        txtRastreoDetalle = new javax.swing.JTextField();
        dcPagoReal = new com.toedter.calendar.JDateChooser();
        txtDescripcion5 = new javax.swing.JTextField();
        txtDrive5 = new javax.swing.JTextField();
        txtFactura5 = new javax.swing.JTextField();
        txtFlete5 = new javax.swing.JTextField();
        txtDescripcion6 = new javax.swing.JTextField();
        txtDrive6 = new javax.swing.JTextField();
        txtFactura6 = new javax.swing.JTextField();
        txtFlete6 = new javax.swing.JTextField();
        txtDetalle3 = new javax.swing.JTextField();
        txtFecha3 = new javax.swing.JTextField();
        txtComprobante3 = new javax.swing.JTextField();
        txtImporte3 = new javax.swing.JTextField();
        txtDetalle4 = new javax.swing.JTextField();
        txtFecha4 = new javax.swing.JTextField();
        txtComprobante4 = new javax.swing.JTextField();
        txtImporte4 = new javax.swing.JTextField();
        txtDeduccion4 = new javax.swing.JTextField();
        txtOtros4 = new javax.swing.JTextField();
        txtDetalle5 = new javax.swing.JTextField();
        txtFecha5 = new javax.swing.JTextField();
        txtComprobante5 = new javax.swing.JTextField();
        txtImporte5 = new javax.swing.JTextField();
        txtDetalle6 = new javax.swing.JTextField();
        txtFecha6 = new javax.swing.JTextField();
        txtComprobante6 = new javax.swing.JTextField();
        txtImporte6 = new javax.swing.JTextField();
        ckImpuestos = new javax.swing.JCheckBox();
        txtCalculoRetencion = new javax.swing.JTextField();
        txtPorcentajeReal = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        coNacional = new javax.swing.JMenuItem();
        coInternacional = new javax.swing.JMenuItem();
        coCisternas = new javax.swing.JMenuItem();
        coCobija = new javax.swing.JMenuItem();
        coGuaya = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1126, 670));
        setPreferredSize(new java.awt.Dimension(1155, 725));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("COMPROBANTE DE LIQUIDACION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("FECHA ELABORACION:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 42, -1, -1));
        getContentPane().add(dcFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 64, 189, -1));

        txtCorrelativo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtCorrelativo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtCorrelativo.setText("CORRELATIVO");
        txtCorrelativo.setPreferredSize(new java.awt.Dimension(41, 24));
        getContentPane().add(txtCorrelativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 60, 166, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("PLACA:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, -1, -1));
        getContentPane().add(txtPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, 90, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("EMPRESA:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        getContentPane().add(txtEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 170, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("PROPIETARIO");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, -1));
        getContentPane().add(txtPropietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 295, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("CHOFER");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("CLIENTE");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 110, -1, -1));
        getContentPane().add(txtChofer, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 323, -1));
        getContentPane().add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 130, 270, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("DESCRIPCION DEL FLETE");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
        getContentPane().add(txtDescripcion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 320, -1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("DRIVE");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 61, -1));
        getContentPane().add(txtDrive1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 89, -1));

        jLabel11.setText("FACT. NRO");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, -1, -1));
        getContentPane().add(txtFactura1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 88, -1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("FLETE Bs.");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, 85, -1));

        txtFlete1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete1.setText("0");
        getContentPane().add(txtFlete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 85, -1));
        getContentPane().add(txtDescripcion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 320, -1));
        getContentPane().add(txtDrive2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 89, -1));
        getContentPane().add(txtFactura2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 88, -1));

        txtFlete2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete2.setText("0");
        getContentPane().add(txtFlete2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 85, -1));
        getContentPane().add(txtDescripcion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 320, -1));
        getContentPane().add(txtDrive3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 89, -1));
        getContentPane().add(txtFactura3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 88, -1));

        txtFlete3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete3.setText("0");
        getContentPane().add(txtFlete3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 85, -1));
        getContentPane().add(txtDescripcion4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 320, -1));
        getContentPane().add(txtDrive4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 89, -1));
        getContentPane().add(txtFactura4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 88, -1));

        txtFlete4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete4.setText("0");
        getContentPane().add(txtFlete4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, 85, -1));

        txtTotalLiquidar.setEditable(false);
        txtTotalLiquidar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalLiquidar.setText("0");
        getContentPane().add(txtTotalLiquidar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, 85, 32));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("IMPORTE TOTAL A LIQUIDAR");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 370, 195, 32));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("ANTICIPOS");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        jLabel15.setText("DETALLE");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        txtImporte1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte1.setText("0");
        getContentPane().add(txtImporte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, 85, -1));
        getContentPane().add(txtComprobante1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, 95, -1));
        getContentPane().add(txtDetalle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 304, -1));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("FECHA");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 100, -1));

        jLabel17.setText("COMPROBANTE");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, -1, -1));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("IMPORTE");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 90, -1));
        getContentPane().add(txtDetalle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 304, -1));
        getContentPane().add(txtComprobante2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 95, -1));

        txtImporte2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte2.setText("0");
        getContentPane().add(txtImporte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 85, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel19.setText("TOTAL ANTICIPOS");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 640, -1, -1));

        txtTotalAnticipos.setEditable(false);
        txtTotalAnticipos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalAnticipos.setText("0");
        getContentPane().add(txtTotalAnticipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 630, 85, 32));

        txtRetencion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRetencion.setText("0");
        txtRetencion.setEnabled(false);
        getContentPane().add(txtRetencion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 210, 86, -1));

        jLabel21.setText("RASTREO SAT. DEL MES :");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 250, 160, 30));

        txtRastreo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRastreo.setText("0");
        getContentPane().add(txtRastreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 250, 86, -1));

        txtSemirremolque.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSemirremolque.setText("0");
        txtSemirremolque.setEnabled(false);
        getContentPane().add(txtSemirremolque, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 280, 86, -1));

        jLabel23.setText("OTROS:");
        jLabel23.setToolTipText("");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 310, -1, -1));
        getContentPane().add(txtDeduccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 330, 366, -1));

        txtOtros1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtros1.setText("0");
        getContentPane().add(txtOtros1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 330, 86, -1));
        getContentPane().add(txtDeduccion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, 366, -1));

        txtOtros2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtros2.setText("0");
        getContentPane().add(txtOtros2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 360, 86, -1));
        getContentPane().add(txtDeduccion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 390, 366, -1));

        txtOtros3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtros3.setText("0");
        getContentPane().add(txtOtros3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 390, 86, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setText("TOTAL DEDUCCIONES");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 470, -1, -1));

        txtTotalDeducciones.setEditable(false);
        txtTotalDeducciones.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalDeducciones.setText("0");
        getContentPane().add(txtTotalDeducciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 460, 86, -1));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setText("LIQUIDO PAGABLE");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 510, -1, -1));

        txtLiquidoPagable.setEditable(false);
        txtLiquidoPagable.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtLiquidoPagable.setText("0");
        getContentPane().add(txtLiquidoPagable, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 500, 86, -1));

        txtLiteral.setPreferredSize(new java.awt.Dimension(48, 24));
        getContentPane().add(txtLiteral, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, 421, -1));

        btnRegistrar.setText("REGISTRAR");
        btnRegistrar.setEnabled(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 10, -1, 34));

        btnTotal.setText("CALCULAR");
        btnTotal.setEnabled(false);
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });
        getContentPane().add(btnTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 500, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("DEDUCCIONES");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, -1, -1));

        btnImprimir.setText("IMPRIMIR");
        btnImprimir.setEnabled(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, -1, 35));

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.setEnabled(false);
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, -1, 36));
        getContentPane().add(txtFecha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, 102, -1));
        getContentPane().add(txtFecha2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 102, -1));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel26.setText("SON: ");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 540, -1, 24));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel27.setText("FECHA CONFORMIDAD");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        txtPorcentaje.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentaje.setText("0");
        getContentPane().add(txtPorcentaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 210, 40, -1));

        dcFechaConformidad.setEnabled(false);
        getContentPane().add(dcFechaConformidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 189, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel28.setText("FECHA APROX. DE PAGO");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel29.setText("% :");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 210, -1, -1));

        txtFechaPago.setEditable(false);
        txtFechaPago.setEnabled(false);
        getContentPane().add(txtFechaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 145, -1));

        txtCodigoSemirremolque.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigoSemirremolque.setEnabled(false);
        getContentPane().add(txtCodigoSemirremolque, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 280, 130, -1));

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("NRO:");
        getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, 30, 30));

        ckSemirremolque.setText("SEMI 12%  :");
        ckSemirremolque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckSemirremolqueActionPerformed(evt);
            }
        });
        getContentPane().add(ckSemirremolque, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, -1, 30));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setText("FECHA DE PAGO:");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, -1, -1));
        getContentPane().add(txtRastreoDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 250, 180, -1));
        getContentPane().add(dcPagoReal, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 166, -1));
        getContentPane().add(txtDescripcion5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 320, -1));
        getContentPane().add(txtDrive5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 89, -1));
        getContentPane().add(txtFactura5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 87, -1));

        txtFlete5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete5.setText("0");
        getContentPane().add(txtFlete5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, 85, -1));
        getContentPane().add(txtDescripcion6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 320, -1));
        getContentPane().add(txtDrive6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 89, -1));
        getContentPane().add(txtFactura6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 87, -1));

        txtFlete6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFlete6.setText("0");
        getContentPane().add(txtFlete6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 340, 85, -1));
        getContentPane().add(txtDetalle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 304, -1));
        getContentPane().add(txtFecha3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 510, 102, -1));
        getContentPane().add(txtComprobante3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 510, 95, -1));

        txtImporte3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte3.setText("0");
        getContentPane().add(txtImporte3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 510, 85, -1));

        txtDetalle4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDetalle4ActionPerformed(evt);
            }
        });
        getContentPane().add(txtDetalle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 304, -1));
        getContentPane().add(txtFecha4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 102, -1));
        getContentPane().add(txtComprobante4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 540, 95, -1));

        txtImporte4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte4.setText("0");
        getContentPane().add(txtImporte4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 540, 85, -1));
        getContentPane().add(txtDeduccion4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, 366, -1));

        txtOtros4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtros4.setText("0");
        getContentPane().add(txtOtros4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 420, 86, -1));
        getContentPane().add(txtDetalle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 304, -1));
        getContentPane().add(txtFecha5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 570, 102, -1));
        getContentPane().add(txtComprobante5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 570, 95, -1));

        txtImporte5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte5.setText("0");
        getContentPane().add(txtImporte5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 570, 85, -1));
        getContentPane().add(txtDetalle6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, 304, -1));
        getContentPane().add(txtFecha6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 600, 102, -1));
        getContentPane().add(txtComprobante6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 600, 95, -1));

        txtImporte6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporte6.setText("0");
        getContentPane().add(txtImporte6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 600, 85, -1));

        ckImpuestos.setText("IMPUESTO");
        ckImpuestos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckImpuestosActionPerformed(evt);
            }
        });
        getContentPane().add(ckImpuestos, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 210, -1, 30));

        txtCalculoRetencion.setEditable(false);
        txtCalculoRetencion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCalculoRetencion.setEnabled(false);
        getContentPane().add(txtCalculoRetencion, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 210, 90, -1));

        txtPorcentajeReal.setEditable(false);
        txtPorcentajeReal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPorcentajeReal.setEnabled(false);
        getContentPane().add(txtPorcentajeReal, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 280, 90, -1));

        jMenu1.setText("CORRELATIVOS");

        coNacional.setText("NACIONAL");
        coNacional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coNacionalActionPerformed(evt);
            }
        });
        jMenu1.add(coNacional);

        coInternacional.setText("INTERNACIONAL");
        coInternacional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coInternacionalActionPerformed(evt);
            }
        });
        jMenu1.add(coInternacional);

        coCisternas.setText("CISTERNAS");
        coCisternas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coCisternasActionPerformed(evt);
            }
        });
        jMenu1.add(coCisternas);

        coCobija.setText("COBIJA");
        coCobija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coCobijaActionPerformed(evt);
            }
        });
        jMenu1.add(coCobija);

        coGuaya.setText("GUAYARAMERIN");
        coGuaya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coGuayaActionPerformed(evt);
            }
        });
        jMenu1.add(coGuaya);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        conexion conexionBase = new conexion();
        Connection con = null;
        
        suma_drives="";
               
        String fecha = sdf.format(dcFecha.getDate()).toUpperCase();
        
        String fecha2 = sdf.format(dcPagoReal.getDate()).toUpperCase();
        
        try{
            con = conexionBase.getConection();
            switch (sw) {
                case 1: 
                        try{
                            ps = con.prepareStatement("INSERT INTO c_nacional (id_correlativo,codigo) VALUES(?,?)");
                            ps.setString(1, num_correlativo);
                            ps.setString(2, txtCorrelativo.getText().toUpperCase());
                            int res = ps.executeUpdate();
                        }catch(Exception e){
                            System.err.println(e);
                        }
                        break;
                case 2: 
                        fecha1 = sdf.format(dcFechaConformidad.getDate()).toUpperCase();
                        try{
                            ps = con.prepareStatement("INSERT INTO c_internacional (id_correlativo,codigo) VALUES(?,?)");
                            ps.setString(1, num_correlativo);
                            ps.setString(2, txtCorrelativo.getText().toUpperCase());
                            int res = ps.executeUpdate();
                        }catch(Exception e){
                            System.err.println(e);
                        }
                        break;
                case 3: try{
                            ps = con.prepareStatement("INSERT INTO c_cisternas (id_correlativo,codigo) VALUES(?,?)");
                            ps.setString(1, num_correlativo);
                            ps.setString(2, txtCorrelativo.getText().toUpperCase());
                            int res = ps.executeUpdate();
                        }catch(Exception e){
                            System.err.println(e);
                        }
                        break;
                case 4: try{
                            ps = con.prepareStatement("INSERT INTO c_cobija (id_correlativo,codigo) VALUES(?,?)");
                            ps.setString(1, num_correlativo);
                            ps.setString(2, txtCorrelativo.getText().toUpperCase());
                            int res = ps.executeUpdate();
                        }catch(Exception e){
                            System.err.println(e);
                        }
                        break;
                case 5: 
                        fecha1 = sdf.format(dcFechaConformidad.getDate()).toUpperCase();
                        try{
                            ps = con.prepareStatement("INSERT INTO c_guayaramerin (id_correlativo,codigo) VALUES(?,?)");
                            ps.setString(1, num_correlativo);
                            ps.setString(2, txtCorrelativo.getText().toUpperCase());
                            int res = ps.executeUpdate();
                        }catch(Exception e){
                            System.err.println(e);
                        }
                        break;
            }
            ps = con.prepareStatement("INSERT INTO comprobante (correlativo, fecha, fecha_conformidad, fecha_pago, fecha_pago_real, empresa, propietario, chofer, cliente, placa, descripcion1, drive1, factura1, flete1, descripcion2, drive2, factura2, flete2, descripcion3, drive3, factura3, flete3, descripcion4, drive4, factura4, flete4, descripcion5, drive5, factura5, flete5, descripcion6, drive6, factura6, flete6, total_fletes, drives, detalle1, fecha1, comprobante1, importe1, detalle2, fecha2, comprobante2, importe2, detalle3, fecha3, comprobante3, importe3, detalle4, fecha4, comprobante4, importe4, detalle5, fecha5, comprobante5, importe5, detalle6, fecha6, comprobante6, importe6, total_anticipos, retencion, porcentaje, rastreo, descripcion_rastreo, semirremolque, codigo_interno, deduccion1, otros1, deduccion2, otros2, deduccion3, otros3, deduccion4, otros4, total_deducciones, liquido_pagable, literal, ruta, gestion, estado) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            ps.setString(1, txtCorrelativo.getText().toUpperCase());
            ps.setString(2, fecha);
            ps.setString(3, fecha1);
            ps.setString(4, txtFechaPago.getText().toUpperCase());
            ps.setString(5, fecha2);
            ps.setString(6, txtEmpresa.getText().toUpperCase());
            ps.setString(7, txtPropietario.getText().toUpperCase());
            ps.setString(8, txtChofer.getText().toUpperCase()); 
            ps.setString(9, txtCliente.getText().toUpperCase());
            ps.setString(10, txtPlaca.getText().toUpperCase());
            
            ps.setString(11, txtDescripcion1.getText().toUpperCase());
            ps.setString(12, txtDrive1.getText().toUpperCase());
            ps.setString(13, txtFactura1.getText().toUpperCase());
            ps.setString(14, DarFormato(txtFlete1.getText()).toUpperCase());
            ps.setString(15, txtDescripcion2.getText().toUpperCase());
            ps.setString(16, txtDrive2.getText().toUpperCase());
            ps.setString(17, txtFactura2.getText().toUpperCase());
            ps.setString(18, DarFormato(txtFlete2.getText()).toUpperCase());
            ps.setString(19, txtDescripcion3.getText().toUpperCase());
            ps.setString(20, txtDrive3.getText().toUpperCase());
            ps.setString(21, txtFactura3.getText().toUpperCase());
            ps.setString(22, DarFormato(txtFlete3.getText()).toUpperCase());
            ps.setString(23, txtDescripcion4.getText().toUpperCase());
            ps.setString(24, txtDrive4.getText().toUpperCase());
            ps.setString(25, txtFactura4.getText().toUpperCase());
            ps.setString(26, DarFormato(txtFlete4.getText()).toUpperCase());           
            ps.setString(27, txtDescripcion5.getText().toUpperCase());
            ps.setString(28, txtDrive5.getText().toUpperCase());
            ps.setString(29, txtFactura5.getText().toUpperCase());
            ps.setString(30, DarFormato(txtFlete5.getText()).toUpperCase());            
            ps.setString(31, txtDescripcion6.getText().toUpperCase());
            ps.setString(32, txtDrive6.getText().toUpperCase());
            ps.setString(33, txtFactura6.getText().toUpperCase());
            ps.setString(34, DarFormato(txtFlete6.getText()).toUpperCase());
            
            ps.setString(35, DarFormato(txtTotalLiquidar.getText()).toUpperCase());
            
            if(txtDrive1.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive1.getText()+")";
            }
            if(txtDrive2.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive2.getText()+")";
            }
            if(txtDrive3.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive3.getText()+")";
            }
            if(txtDrive4.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive4.getText()+")";
            }
            if(txtDrive5.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive5.getText()+")";
            }
            if(txtDrive6.getText().isEmpty()==false){
                suma_drives = suma_drives+"("+txtDrive6.getText()+")";
            }
            ps.setString(36, suma_drives);
            
            ps.setString(37, txtDetalle1.getText().toUpperCase());
            ps.setString(38, txtFecha1.getText().toUpperCase());
            ps.setString(39, txtComprobante1.getText().toUpperCase());
            ps.setString(40, DarFormato(txtImporte1.getText()).toUpperCase());
            ps.setString(41, txtDetalle2.getText().toUpperCase());
            ps.setString(42, txtFecha2.getText().toUpperCase());
            ps.setString(43, txtComprobante2.getText().toUpperCase());
            ps.setString(44, DarFormato(txtImporte2.getText()).toUpperCase());
            ps.setString(45, txtDetalle3.getText().toUpperCase());
            ps.setString(46, txtFecha3.getText().toUpperCase());
            ps.setString(47, txtComprobante3.getText().toUpperCase());
            ps.setString(48, DarFormato(txtImporte3.getText()).toUpperCase());
            ps.setString(49, txtDetalle4.getText().toUpperCase());
            ps.setString(50, txtFecha4.getText().toUpperCase());
            ps.setString(51, txtComprobante4.getText().toUpperCase());
            ps.setString(52, DarFormato(txtImporte4.getText()).toUpperCase());
            ps.setString(53, txtDetalle5.getText().toUpperCase());
            ps.setString(54, txtFecha5.getText().toUpperCase());
            ps.setString(55, txtComprobante5.getText().toUpperCase());
            ps.setString(56, DarFormato(txtImporte5.getText()).toUpperCase());
            ps.setString(57, txtDetalle6.getText().toUpperCase());
            ps.setString(58, txtFecha6.getText().toUpperCase());
            ps.setString(59, txtComprobante6.getText().toUpperCase());
            ps.setString(60, DarFormato(txtImporte6.getText()).toUpperCase());
            
            ps.setString(61, DarFormato(txtTotalAnticipos.getText()).toUpperCase());
            
            ps.setString(62, DarFormato(txtRetencion.getText()).toUpperCase());
            ps.setString(63, txtPorcentaje.getText().toUpperCase());
            ps.setString(64, DarFormato(txtRastreo.getText()).toUpperCase());
            ps.setString(65, txtRastreoDetalle.getText().toUpperCase());
            ps.setString(66, DarFormato(txtSemirremolque.getText()).toUpperCase());
            ps.setString(67, txtCodigoSemirremolque.getText().toUpperCase());
            ps.setString(68, txtDeduccion1.getText().toUpperCase());
            ps.setString(69, DarFormato(txtOtros1.getText()).toUpperCase());
            ps.setString(70, txtDeduccion2.getText().toUpperCase());
            ps.setString(71, DarFormato(txtOtros2.getText()).toUpperCase());
            ps.setString(72, txtDeduccion3.getText().toUpperCase());
            ps.setString(73, DarFormato(txtOtros3.getText()).toUpperCase());
            ps.setString(74, txtDeduccion4.getText().toUpperCase());
            ps.setString(75, DarFormato(txtOtros4.getText()).toUpperCase());
            ps.setString(76, DarFormato(txtTotalDeducciones.getText()).toUpperCase());
            ps.setString(77, DarFormato(txtLiquidoPagable.getText()).toUpperCase());
            ps.setString(78, txtLiteral.getText().toUpperCase());
            ps.setString(79, Integer.toString(sw));
            ps.setString(80, gestion);
            ps.setString(81, "activo");
           
            int res = ps.executeUpdate();
            
            if(res > 0){
                JOptionPane.showMessageDialog(null, "REGISTRADO CORRECTAMENTE");
                //Limpiar();
                //RecuperaNumero();
            }else{
                JOptionPane.showMessageDialog(null,"ERROR AL REGISTRAR");
            }
        }catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL REGISTRAR");
        }
        btnImprimir.setEnabled(true);
        btnRegistrar.setEnabled(false);
        btnTotal.setEnabled(false);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void coNacionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coNacionalActionPerformed
        dcFechaConformidad.setEnabled(false);
        txtFechaPago.setEnabled(false);
        sw=1;
        int num = 0;
        String c = "";  
        String correlativo = "";
        conexion conexionBase = new conexion();
        Connection con = null;
        
        try{
            con = conexionBase.getConection();
            ps = con.prepareStatement("SELECT id_correlativo FROM c_nacional ORDER BY id_correlativo DESC LIMIT 1");
            rs = ps.executeQuery();
            if(rs.next())
            {              
                //c = rs.getString("id_correlativo");      //PARA id_num COMO STRING
                num = rs.getInt("id_correlativo");     //PARA id_num COMO INT
            }
            //num = Integer.parseInt(c)+1;          //PARA id_num COMO STRING
            num = num+1;                        //PARA id_num COMO INT
            
            correlativo=Integer.toString(num);
        }
        catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL RECUPERAR EL NUMERO DE CORRELATIVO");
        }
        
        String codigo;
        num_correlativo = correlativo;
        correlativo = String.format("%3s", correlativo).replace(' ','0');
        codigo = "EA-N-"+correlativo+"/"+gestion;
        txtCorrelativo.setText(codigo);
        btnTotal.setEnabled(true);
    }//GEN-LAST:event_coNacionalActionPerformed

    private void coInternacionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coInternacionalActionPerformed
        dcFechaConformidad.setEnabled(true);
        txtFechaPago.setEnabled(true);
        sw=2;
        int num = 0;
        String c = "";  
        String correlativo = "";
        conexion conexionBase = new conexion();
        Connection con = null;
        
        try{
            con = conexionBase.getConection();
            ps = con.prepareStatement("SELECT id_correlativo FROM c_internacional ORDER BY id_correlativo DESC LIMIT 1");
            rs = ps.executeQuery();
            if(rs.next())
            {              
                //c = rs.getString("id_correlativo");      //PARA id_num COMO STRING
                num = rs.getInt("id_correlativo");     //PARA id_num COMO INT
            }
            //num = Integer.parseInt(c)+1;          //PARA id_num COMO STRING
            num = num+1;                        //PARA id_num COMO INT
            
            correlativo=Integer.toString(num);
        }
        catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL RECUPERAR EL NUMERO DE CORRELATIVO");
        }
        
        String codigo;
        num_correlativo = correlativo;
        correlativo = String.format("%3s", correlativo).replace(' ','0');
        codigo = "EA-I-"+correlativo+"/"+gestion;
        txtCorrelativo.setText(codigo);
        btnTotal.setEnabled(true);
    }//GEN-LAST:event_coInternacionalActionPerformed

    private void coCisternasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coCisternasActionPerformed
        dcFechaConformidad.setEnabled(false);
        txtFechaPago.setEnabled(false);
        sw=3;
        int num = 0;
        String c = "";  
        String correlativo = "";
        conexion conexionBase = new conexion();
        Connection con = null;
        
        try{
            con = conexionBase.getConection();
            ps = con.prepareStatement("SELECT id_correlativo FROM c_cisternas ORDER BY id_correlativo DESC LIMIT 1");
            rs = ps.executeQuery();
            if(rs.next())
            {              
                //c = rs.getString("id_correlativo");      //PARA id_num COMO STRING
                num = rs.getInt("id_correlativo");     //PARA id_num COMO INT
            }
            //num = Integer.parseInt(c)+1;          //PARA id_num COMO STRING
            num = num+1;                        //PARA id_num COMO INT
            
            correlativo=Integer.toString(num);
        }
        catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL RECUPERAR EL NUMERO DE CORRELATIVO");
        }
        
        String codigo;
        num_correlativo = correlativo;
        correlativo = String.format("%3s", correlativo).replace(' ','0');
        codigo = "EA-CIST-"+correlativo+"/"+gestion;
        txtCorrelativo.setText(codigo);
        btnTotal.setEnabled(true);
    }//GEN-LAST:event_coCisternasActionPerformed

    private void coCobijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coCobijaActionPerformed
        dcFechaConformidad.setEnabled(false);
        txtFechaPago.setEnabled(false);
        sw=4;
        int num = 0;
        String c = "";  
        String correlativo = "";
        conexion conexionBase = new conexion();
        Connection con = null;
        
        try{
            con = conexionBase.getConection();
            ps = con.prepareStatement("SELECT id_correlativo FROM c_cobija ORDER BY id_correlativo DESC LIMIT 1");
            rs = ps.executeQuery();
            if(rs.next())
            {              
                //c = rs.getString("id_correlativo");      //PARA id_num COMO STRING
                num = rs.getInt("id_correlativo");     //PARA id_num COMO INT
            }
            //num = Integer.parseInt(c)+1;          //PARA id_num COMO STRING
            num = num+1;                        //PARA id_num COMO INT
            
            correlativo=Integer.toString(num);
        }
        catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL RECUPERAR EL NUMERO DE CORRELATIVO");
        }
        
        String codigo;
        num_correlativo = correlativo;
        correlativo = String.format("%3s", correlativo).replace(' ','0');
        codigo = "EA-C-"+correlativo+"/"+gestion;
        txtCorrelativo.setText(codigo);        
        btnTotal.setEnabled(true);
    }//GEN-LAST:event_coCobijaActionPerformed

    private void coGuayaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coGuayaActionPerformed
        dcFechaConformidad.setEnabled(true);
        txtFechaPago.setEnabled(true);
        sw=5;
        int num = 0;
        String c = "";  
        String correlativo = "";
        conexion conexionBase = new conexion();
        Connection con = null;
        
        try{
            con = conexionBase.getConection();
            ps = con.prepareStatement("SELECT id_correlativo FROM c_guayaramerin ORDER BY id_correlativo DESC LIMIT 1");
            rs = ps.executeQuery();
            if(rs.next())
            {              
                //c = rs.getString("id_correlativo");      //PARA id_num COMO STRING
                num = rs.getInt("id_correlativo");     //PARA id_num COMO INT
            }
            //num = Integer.parseInt(c)+1;          //PARA id_num COMO STRING
            num = num+1;                        //PARA id_num COMO INT
            
            correlativo=Integer.toString(num);
            System.out.println(correlativo);
        }
        catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL RECUPERAR EL NUMERO DE CORRELATIVO");
        }
        
        String codigo;
        num_correlativo = correlativo;
        correlativo = String.format("%3s", correlativo).replace(' ','0');
        System.out.println(correlativo);
        codigo = "EA-G-"+correlativo+"/"+gestion;
        System.out.println(codigo);
        txtCorrelativo.setText(codigo);
        btnTotal.setEnabled(true);
    }//GEN-LAST:event_coGuayaActionPerformed

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
      
        // - - - -  - - - - - -- -  CALCULO FECHA DE PAGO  --- - - - - - - -  - - 
        Date fechacon;
        Date fechapago;
        String fechaPago;
        Calendar calendar = Calendar.getInstance();
        try{
            switch (sw){
                case 1: fecha1="";
                        break;
                case 2: fechacon = dcFechaConformidad.getDate();
                        calendar.setTime(fechacon);
                        calendar.add(DAY_OF_YEAR,30);
                        fechapago = calendar.getTime();
                        fechaPago = sdf.format(fechapago);
                        txtFechaPago.setText(fechaPago);
                        break;
                case 3: fecha1="";
                        break;
                case 4: fecha1="";
                        break;
                case 5: fechacon = dcFechaConformidad.getDate();
                        calendar.setTime(fechacon);
                        calendar.add(DAY_OF_YEAR,30);
                        fechapago = calendar.getTime();
                        fechaPago = sdf.format(fechapago);
                        txtFechaPago.setText(fechaPago);
                        break;
            }

            btnRegistrar.setEnabled(true);
            Calcular_Total();
            String numero2=txtLiquidoPagable.getText();
            Numero_a_Letra(numero2);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"REVISE QUE TODAS LAS FECHAS ESTEN LLENADAS");
        }        
    }//GEN-LAST:event_btnTotalActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        conexion conexionBase = new conexion();
        Connection con = null;
        con = conexionBase.getConection();    
        
        String a = txtCorrelativo.getText();
        
        try{
            Map<String,Object> parametros = new HashMap<String,Object>();
            parametros.put("x", a);
            
            String RutaReporte="";
            
            if(sw2==0){
                RutaReporte =System.getProperty("user.dir")+"\\reportes\\Liquidacion.jasper";  // PARA EMPAQUETAR
                //String RutaReporte =System.getProperty("user.dir")+"\\src\\reportes\\Liquidacion.jasper"; // PARA DESARROLLO
            }else{
                RutaReporte =System.getProperty("user.dir")+"\\reportes\\Liquidacion_2.jasper";  // PARA EMPAQUETAR
                //String RutaReporte =System.getProperty("user.dir")+"\\src\\reportes\\Liquidacion.jasper"; // PARA DESARROLLO
            }
            JasperReport jasperReport=(JasperReport)JRLoader.loadObjectFromFile(RutaReporte);
            
            JasperPrint print = JasperFillManager.fillReport(jasperReport, parametros, con);
            JasperViewer view = new JasperViewer(print, false);
            view.setTitle("IMPRESION DE LIQUIDACION");
            view.setVisible(true);
            
        }catch(Exception e){
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"ERROR AL CARGAR EL REPORTE");
        }
        //btnLimpiar.setEnabled(true);
        btnRegistrar.setEnabled(false);
        limpiar();
        dispose();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void ckSemirremolqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckSemirremolqueActionPerformed
        if(ckSemirremolque.isSelected()){
            double flete1, flete2, flete3, flete4, flete5, flete6, totalflete;      
            flete1 = Double.parseDouble(txtFlete1.getText());
            flete2 = Double.parseDouble(txtFlete2.getText());
            flete3 = Double.parseDouble(txtFlete3.getText());
            flete4 = Double.parseDouble(txtFlete4.getText());
            /*if(flete4==0){
                sw2=1;
            }else{
                sw2=0;
            }*/
            flete5 = Double.parseDouble(txtFlete5.getText());
            flete6 = Double.parseDouble(txtFlete6.getText()); 
            totalflete = flete1+flete2+flete3+flete4+flete5+flete6;        
            
            txtCodigoSemirremolque.setEnabled(true);
            txtSemirremolque.setEnabled(true);
            txtPorcentajeReal.setEnabled(true);
            txtSemirremolque.setText(formatea2.format(totalflete*0.12));
            txtPorcentajeReal.setText(formatea2.format(totalflete*0.12));
        }else{
            txtCodigoSemirremolque.setEnabled(false);
            txtSemirremolque.setText("0.00");
            txtPorcentajeReal.setText("0.00");
            txtSemirremolque.setEnabled(false);
            txtPorcentajeReal.setEnabled(false);
            txtCodigoSemirremolque.setText(null);
        }
    }//GEN-LAST:event_ckSemirremolqueActionPerformed

    private void txtDetalle4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDetalle4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDetalle4ActionPerformed

    private void ckImpuestosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckImpuestosActionPerformed

        if(ckImpuestos.isSelected()){
            if(txtPorcentaje.getText().equals("0")){
                JOptionPane.showMessageDialog(null, "EL PORCENTAJE DEBE SER DISTINTO A CERO");
                ckImpuestos.setSelected(false);
            }else{
                double flete1, flete2, flete3, flete4, flete5, flete6, totalflete, porcentaje;
            flete1 = Double.parseDouble(txtFlete1.getText());
            flete2 = Double.parseDouble(txtFlete2.getText());
            flete3 = Double.parseDouble(txtFlete3.getText());
            flete4 = Double.parseDouble(txtFlete4.getText());
            porcentaje = Double.parseDouble(txtPorcentaje.getText());
            /*if(flete4==0){
                sw2=1;
            }else{
                sw2=0;
            }*/
            flete5 = Double.parseDouble(txtFlete5.getText());
            flete6 = Double.parseDouble(txtFlete6.getText());
            totalflete = flete1+flete2+flete3+flete4+flete5+flete6;

            //txtImpuestos.setEnabled(true);
            txtRetencion.setEnabled(true);
            txtCalculoRetencion.setEnabled(true);
            txtCalculoRetencion.setText(formatea2.format(totalflete*(porcentaje/100)));
            txtRetencion.setText(formatea2.format(totalflete*(porcentaje/100)));
            }           
        }else{
            //txtImpuestos.setEnabled(false);
            txtRetencion.setText("0.00");
            txtPorcentaje.setText("0");
            txtCalculoRetencion.setText("0.00");
            txtRetencion.setEnabled(false);
            txtCalculoRetencion.setEnabled(false);
            //txtImpuestos.setText(null);
        }
    }//GEN-LAST:event_ckImpuestosActionPerformed

    /**
     * @param args the command line arguments
     */
    String DarFormato(String numero){
        double n = Double.parseDouble(numero);
        numero=formatea.format(n);
        if(n % 1==0){
            numero=numero+".00";
        }
        return numero;
    }
    
    private void Calcular_Total(){
        
        // CALCULO DE TOTAL FLETE SIN DAR FORMATO -------------------------------------------------------------------------
        double flete1, flete2, flete3, flete4, flete5, flete6, totalflete;
        String numero,numero2;       
        flete1 = Double.parseDouble(txtFlete1.getText());
        flete2 = Double.parseDouble(txtFlete2.getText());
        flete3 = Double.parseDouble(txtFlete3.getText());
        flete4 = Double.parseDouble(txtFlete4.getText());
        if(flete4==0){
                sw2=1;
            }else{
                sw2=0;
        }
        flete5 = Double.parseDouble(txtFlete5.getText());
        flete6 = Double.parseDouble(txtFlete6.getText());
        
        totalflete = flete1+flete2+flete3+flete4+flete5+flete6;
        System.out.println(totalflete);
        txtTotalLiquidar.setText(formatea2.format(totalflete));
        
        //CALCULO DE TOTAL ANTICIPOS SIN DAR FORMATO ----------------------------------------------------------------------
        double importe1, importe2, importe3, importe4, importe5, importe6, totalanticipos;
        importe1 = Double.parseDouble(txtImporte1.getText());
        importe2 = Double.parseDouble(txtImporte2.getText());
        importe3 = Double.parseDouble(txtImporte3.getText()); 
        importe4 = Double.parseDouble(txtImporte4.getText());
        importe5 = Double.parseDouble(txtImporte5.getText());
        importe6 = Double.parseDouble(txtImporte6.getText());
        
        totalanticipos = importe1+importe2+importe3+importe4+importe5+importe6;       
        txtTotalAnticipos.setText(formatea2.format(totalanticipos));
        
        //CALCULO DE TOTAL DEDUCCIONES SIN DAR FORMATO --------------------------------------------------------------------
        double retencion, porcentaje, rastreo, semirremolque, otros1, otros2, otros3, otros4, totaldeducciones;
        //porcentaje = Double.parseDouble(txtPorcentaje.getText());
        //txtRetencion.setText(formatea2.format(totalflete*(porcentaje/100)));
        retencion = Double.parseDouble(txtRetencion.getText());
        //porcentaje = (Double.parseDouble(txtPorcentaje.getText())/100);
        //retencion = totalflete * porcentaje;
        //txtRetencion.setText(formatea2.format(retencion));
        rastreo = Double.parseDouble(txtRastreo.getText());       
        /*if(ckSemirremolque.isSelected()){
            txtPorcentajeReal.setText(formatea2.format(totalflete*0.12));
        }*/
        semirremolque = Double.parseDouble(txtSemirremolque.getText());
        otros1 = Double.parseDouble(txtOtros1.getText());
        otros2 = Double.parseDouble(txtOtros2.getText());
        otros3 = Double.parseDouble(txtOtros3.getText());
        otros4 = Double.parseDouble(txtOtros4.getText());      
        totaldeducciones = retencion+rastreo+semirremolque+otros1+otros2+otros3+otros4+totalanticipos;
        txtTotalDeducciones.setText(formatea2.format(totaldeducciones));
        
        //CALCULO DE LIQUIDO PAGABLE SIN DAR FORMATO
        double liquido;       
        liquido = totalflete - totaldeducciones;
        txtLiquidoPagable.setText(formatea2.format(liquido));
    }
    
    private void limpiar(){
        txtCorrelativo.setText(null);
        dcFecha.setDate(null);
        txtPlaca.setText(null);
        txtEmpresa.setText(null);
        txtPropietario.setText(null);
        txtChofer.setText(null);
        txtCliente.setText(null);
        txtDescripcion1.setText(null);
        txtDrive1.setText(null);
        txtFactura1.setText(null);
        txtFlete1.setText(null);
        txtDescripcion2.setText(null);
        txtDrive2.setText(null);
        txtFactura2.setText(null);
        txtFlete2.setText("0");
        txtDescripcion3.setText(null);
        txtDrive3.setText(null);
        txtFactura3.setText(null);
        txtFlete3.setText("0");
        txtDescripcion4.setText(null);
        txtDrive4.setText(null);
        txtFactura4.setText(null);
        txtFlete4.setText("0");
        txtDescripcion5.setText(null);
        txtDrive5.setText(null);
        txtFactura5.setText(null);
        txtFlete5.setText("0");
        txtDescripcion6.setText(null);
        txtDrive6.setText(null);
        txtFactura6.setText(null);
        txtFlete6.setText("0");
        txtTotalLiquidar.setText("0");
        txtDetalle1.setText(null);
        txtFecha1.setText(null);
        txtComprobante1.setText(null);
        txtImporte1.setText("0");
        txtDetalle2.setText(null);
        txtFecha2.setText(null);
        txtComprobante2.setText(null);
        txtImporte2.setText("0");
        txtDetalle3.setText(null);
        txtFecha3.setText(null);
        txtComprobante3.setText(null);
        txtImporte3.setText("0");
        txtDetalle4.setText(null);
        txtFecha4.setText(null);
        txtComprobante4.setText(null);
        txtImporte4.setText("0");
        txtTotalAnticipos.setText("0");
        txtPorcentaje.setText("0");
        txtRetencion.setText("0");
        txtRastreo.setText("0");
        txtRastreoDetalle.setText(null);
        txtCodigoSemirremolque.setText(null);
        txtSemirremolque.setText("0");
        txtDeduccion1.setText(null);
        txtOtros1.setText("0");
        txtDeduccion2.setText(null);
        txtOtros2.setText("0");
        txtDeduccion3.setText(null);
        txtOtros3.setText("0");
        txtDeduccion4.setText(null);
        txtOtros4.setText("0");
        txtTotalDeducciones.setText("0");
        txtLiquidoPagable.setText("0");
        txtLiteral.setText(null);       
    }
    
    private void Numero_a_Letra(String n){             
        String numero=n; 
        String parte_entera="";
        String parte_decimal;
        String literal="";
        numero = numero.replace(".",",");
        
        if(numero.indexOf(",")==-1){
            numero = numero + ",00";
        }
        
        if(Pattern.matches("\\d{1,9},\\d{1,2}", numero)){
            String Num[]=numero.split(",");
            if(Num[1].length()==1){
                parte_decimal = Num[1]+"0/100 BOLIVIANOS";
            }else{
                parte_decimal = Num[1]+"/100 BOLIVIANOS";
            }          
            if (Integer.parseInt(Num[0])==0){
                parte_entera = "CERO ";
            }else if(Integer.parseInt(Num[0])>9999999){
                parte_entera = getMillones(Num[0]);
            }else if (Integer.parseInt(Num[0]) > 999) {//si es miles
                parte_entera = getMiles(Num[0]);
            }else if (Integer.parseInt(Num[0]) > 99) {//si es centena
                parte_entera = getCentenas(Num[0]);
            }else if (Integer.parseInt(Num[0]) > 9) {//si es decena
                parte_entera = getDecenas(Num[0]);
            }else {//sino unidades -> 9
                parte_entera = getUnidades(Num[0]);
            }
            literal = (parte_entera + parte_decimal).toUpperCase();
            
        }else{
            JOptionPane.showMessageDialog(null,"REVISE EL FORMATO DE LOS NUMEROS");
            //return literal = null;
        }
        txtLiteral.setText(literal);
    }
    
    private String getUnidades(String numero) {// 1 - 9
        //si tuviera algun 0 antes se lo quita -> 09 = 9 o 009=9
        String num = numero.substring(numero.length() - 1);
        return UNIDADES[Integer.parseInt(num)];
    }
    
    private String getDecenas(String num) {// 99                        
        int n = Integer.parseInt(num);
        if (n < 10) {//para casos como -> 01 - 09
            return getUnidades(num);
        } else if (n > 19) {//para 20...99
            String u = getUnidades(num);
            if (u.equals("")) { //para 20,30,40,50,60,70,80,90
                return DECENAS[Integer.parseInt(num.substring(0, 1)) + 8];
            } else {
                return DECENAS[Integer.parseInt(num.substring(0, 1)) + 8] + "y " + u;
            }
        } else {//numeros entre 11 y 19
            return DECENAS[n - 10];
        }
    }
    
    private String getCentenas(String num) {// 999 o 099
        if( Integer.parseInt(num)>99 ){//es centena
            if (Integer.parseInt(num) == 100) {//caso especial
                return " cien ";
            } else {
                 return CENTENAS[Integer.parseInt(num.substring(0, 1))] + getDecenas(num.substring(1));
            } 
        }else{//por Ej. 099 
            //se quita el 0 antes de convertir a decenas
            return getDecenas(Integer.parseInt(num)+"");            
        }        
    }
    
    private String getMiles(String numero) {// 999 999
        //obtiene las centenas
        String c = numero.substring(numero.length() - 3);
        //obtiene los miles
        String m = numero.substring(0, numero.length() - 3);
        String n="";
        //se comprueba que miles tenga valor entero
        if (Integer.parseInt(m) > 0) {
            n = getCentenas(m);           
            return n + "mil " + getCentenas(c);
        } else {
            return "" + getCentenas(c);
        }

    }
    
    private String getMillones(String numero) { //000 000 000        
        //se obtiene los miles
        String miles = numero.substring(numero.length() - 6);
        //se obtiene los millones
        String millon = numero.substring(0, numero.length() - 6);
        String n = "";
        if(millon.length()>1){
            n = getCentenas(millon) + "millones ";
        }else{
            n = getUnidades(millon) + "millon ";
        }
        return n + getMiles(miles);        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrarLiquidacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrarLiquidacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrarLiquidacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrarLiquidacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrarLiquidacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnTotal;
    private javax.swing.JCheckBox ckImpuestos;
    private javax.swing.JCheckBox ckSemirremolque;
    private javax.swing.JMenuItem coCisternas;
    private javax.swing.JMenuItem coCobija;
    private javax.swing.JMenuItem coGuaya;
    private javax.swing.JMenuItem coInternacional;
    private javax.swing.JMenuItem coNacional;
    private com.toedter.calendar.JDateChooser dcFecha;
    private com.toedter.calendar.JDateChooser dcFechaConformidad;
    private com.toedter.calendar.JDateChooser dcPagoReal;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField txtCalculoRetencion;
    private javax.swing.JTextField txtChofer;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodigoSemirremolque;
    private javax.swing.JTextField txtComprobante1;
    private javax.swing.JTextField txtComprobante2;
    private javax.swing.JTextField txtComprobante3;
    private javax.swing.JTextField txtComprobante4;
    private javax.swing.JTextField txtComprobante5;
    private javax.swing.JTextField txtComprobante6;
    private javax.swing.JLabel txtCorrelativo;
    private javax.swing.JTextField txtDeduccion1;
    private javax.swing.JTextField txtDeduccion2;
    private javax.swing.JTextField txtDeduccion3;
    private javax.swing.JTextField txtDeduccion4;
    private javax.swing.JTextField txtDescripcion1;
    private javax.swing.JTextField txtDescripcion2;
    private javax.swing.JTextField txtDescripcion3;
    private javax.swing.JTextField txtDescripcion4;
    private javax.swing.JTextField txtDescripcion5;
    private javax.swing.JTextField txtDescripcion6;
    private javax.swing.JTextField txtDetalle1;
    private javax.swing.JTextField txtDetalle2;
    private javax.swing.JTextField txtDetalle3;
    private javax.swing.JTextField txtDetalle4;
    private javax.swing.JTextField txtDetalle5;
    private javax.swing.JTextField txtDetalle6;
    private javax.swing.JTextField txtDrive1;
    private javax.swing.JTextField txtDrive2;
    private javax.swing.JTextField txtDrive3;
    private javax.swing.JTextField txtDrive4;
    private javax.swing.JTextField txtDrive5;
    private javax.swing.JTextField txtDrive6;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtFactura1;
    private javax.swing.JTextField txtFactura2;
    private javax.swing.JTextField txtFactura3;
    private javax.swing.JTextField txtFactura4;
    private javax.swing.JTextField txtFactura5;
    private javax.swing.JTextField txtFactura6;
    private javax.swing.JTextField txtFecha1;
    private javax.swing.JTextField txtFecha2;
    private javax.swing.JTextField txtFecha3;
    private javax.swing.JTextField txtFecha4;
    private javax.swing.JTextField txtFecha5;
    private javax.swing.JTextField txtFecha6;
    private javax.swing.JTextField txtFechaPago;
    private javax.swing.JTextField txtFlete1;
    private javax.swing.JTextField txtFlete2;
    private javax.swing.JTextField txtFlete3;
    private javax.swing.JTextField txtFlete4;
    private javax.swing.JTextField txtFlete5;
    private javax.swing.JTextField txtFlete6;
    private javax.swing.JTextField txtImporte1;
    private javax.swing.JTextField txtImporte2;
    private javax.swing.JTextField txtImporte3;
    private javax.swing.JTextField txtImporte4;
    private javax.swing.JTextField txtImporte5;
    private javax.swing.JTextField txtImporte6;
    private javax.swing.JTextField txtLiquidoPagable;
    private javax.swing.JLabel txtLiteral;
    private javax.swing.JTextField txtOtros1;
    private javax.swing.JTextField txtOtros2;
    private javax.swing.JTextField txtOtros3;
    private javax.swing.JTextField txtOtros4;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPorcentaje;
    private javax.swing.JTextField txtPorcentajeReal;
    private javax.swing.JTextField txtPropietario;
    private javax.swing.JTextField txtRastreo;
    private javax.swing.JTextField txtRastreoDetalle;
    private javax.swing.JTextField txtRetencion;
    private javax.swing.JTextField txtSemirremolque;
    private javax.swing.JTextField txtTotalAnticipos;
    private javax.swing.JTextField txtTotalDeducciones;
    private javax.swing.JTextField txtTotalLiquidar;
    // End of variables declaration//GEN-END:variables
}
